{
    "swagger": "2.0",
    "info": {
        "title": "Casdoor RESTful API",
        "description": "Swagger Docs of Casdoor Backend API",
        "version": "1.376.2",
        "contact": {
            "email": "casbin@googlegroups.com"
        }
    },
    "basePath": "/",
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
        "/.well-known/jwks": {
            "get": {
                "tags": [
                    "OIDC API"
                ],
                "operationId": "RootController.GetJwks",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/jose.JSONWebKey"
                        }
                    }
                }
            }
        },
        "/.well-known/openid-configuration": {
            "get": {
                "tags": [
                    "OIDC API"
                ],
                "description": "Get Oidc Discovery",
                "operationId": "RootController.GetOidcDiscovery",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/object.OidcDiscovery"
                        }
                    }
                }
            }
        },
        "/api/add-adapter": {
            "post": {
                "tags": [
                    "Adapter API"
                ],
                "description": "add adapter",
                "operationId": "ApiController.AddAdapter",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the adapter",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Adapter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/add-api-token": {
            "post": {
                "tags": [
                    "Api Token API"
                ],
                "description": "add api token",
                "operationId": "ApiController.AddApiToken",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The owner of token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.UserApiToken"
                        }
                    },
                    "403": {
                        "description": "Unauthorized operation"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/add-application": {
            "post": {
                "tags": [
                    "Application API"
                ],
                "description": "add an application",
                "operationId": "ApiController.AddApplication",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the application",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Application"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/add-cert": {
            "post": {
                "tags": [
                    "Cert API"
                ],
                "description": "add cert",
                "operationId": "ApiController.AddCert",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the cert",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cert.Cert"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/add-domain": {
            "post": {
                "tags": [
                    "Domain API"
                ],
                "description": "add domain",
                "operationId": "ApiController.AddDomain",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the domain",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Domain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/add-enforcer": {
            "post": {
                "tags": [
                    "Enforcer API"
                ],
                "description": "add enforcer",
                "operationId": "ApiController.AddEnforcer",
                "parameters": [
                    {
                        "in": "body",
                        "name": "enforcer",
                        "description": "The enforcer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/object"
                        }
                    }
                }
            }
        },
        "/api/add-group": {
            "post": {
                "tags": [
                    "Group API"
                ],
                "description": "add group",
                "operationId": "ApiController.AddGroup",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the group",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Group"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/add-ldap": {
            "post": {
                "tags": [
                    "Account API"
                ],
                "description": "add ldap",
                "operationId": "ApiController.AddLdap",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the ldap",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Ldap"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/add-model": {
            "post": {
                "tags": [
                    "Model API"
                ],
                "description": "add model",
                "operationId": "ApiController.AddModel",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Model"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/add-organization": {
            "post": {
                "tags": [
                    "Organization API"
                ],
                "description": "add organization",
                "operationId": "ApiController.AddOrganization",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the organization",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Organization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/add-permission": {
            "post": {
                "tags": [
                    "Permission API"
                ],
                "description": "add permission",
                "operationId": "ApiController.AddPermission",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the permission",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Permission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/add-provider": {
            "post": {
                "tags": [
                    "Provider API"
                ],
                "description": "add provider",
                "operationId": "ApiController.AddProvider",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the provider",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Provider"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/add-record": {
            "post": {
                "tags": [
                    "Record API"
                ],
                "description": "add a record",
                "operationId": "ApiController.AddRecord",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the record",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Record"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/add-role": {
            "post": {
                "tags": [
                    "Role API"
                ],
                "description": "add role",
                "operationId": "ApiController.AddRole",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the role",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/add-session": {
            "post": {
                "tags": [
                    "Session API"
                ],
                "description": "Add session for one user in one application. If there are other existing sessions, join the session into the list.",
                "operationId": "ApiController.AddSession",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id(organization/application/user) of session",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sessionId",
                        "description": "sessionId to be added",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/add-token": {
            "post": {
                "tags": [
                    "Token API"
                ],
                "description": "add token",
                "operationId": "ApiController.AddToken",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Details of the token",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/add-user": {
            "post": {
                "tags": [
                    "User API"
                ],
                "description": "add user",
                "operationId": "ApiController.AddUser",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/add-user-id-provider": {
            "post": {
                "tags": [
                    "User API"
                ],
                "description": "add user id provider",
                "operationId": "ApiController.AddUserIdProvider",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the user id provider",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.UserIdProvider"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/add-user-keys": {
            "post": {
                "tags": [
                    "User API"
                ],
                "operationId": "ApiController.AddUserkeys",
                "responses": {
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/add-webhook": {
            "post": {
                "tags": [
                    "Webhook API"
                ],
                "description": "add webhook",
                "operationId": "ApiController.AddWebhook",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the webhook",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Webhook"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/batch-enforce": {
            "post": {
                "tags": [
                    "Enforce API"
                ],
                "description": "Call Casbin BatchEnforce API",
                "operationId": "ApiController.BatchEnforce",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "array of casbin requests",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.CasbinRequest"
                        }
                    },
                    {
                        "in": "query",
                        "name": "permissionId",
                        "description": "permission id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "modelId",
                        "description": "model id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/callback": {
            "post": {
                "tags": [
                    "Callback API"
                ],
                "description": "Get Login Error Counts",
                "operationId": "ApiController.Callback",
                "responses": {
                    "200": {
                        "description": "\"The Response object\"",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/check-user-password": {
            "post": {
                "tags": [
                    "User API"
                ],
                "operationId": "ApiController.CheckUserPassword",
                "responses": {
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/delete-adapter": {
            "post": {
                "tags": [
                    "Adapter API"
                ],
                "description": "delete adapter",
                "operationId": "ApiController.DeleteAdapter",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the adapter",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Adapter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/delete-api-token": {
            "post": {
                "tags": [
                    "Api Token API"
                ],
                "description": "delete api token",
                "operationId": "ApiController.DeleteApiToken",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The owner of token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api_token",
                        "description": "The user api token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "403": {
                        "description": "Unauthorized operation"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/delete-application": {
            "post": {
                "tags": [
                    "Application API"
                ],
                "description": "delete an application",
                "operationId": "ApiController.DeleteApplication",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the application",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Application"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/delete-cert": {
            "post": {
                "tags": [
                    "Cert API"
                ],
                "description": "delete cert",
                "operationId": "ApiController.DeleteCert",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the cert",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cert.Cert"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/delete-domain": {
            "post": {
                "tags": [
                    "Domain API"
                ],
                "description": "delete domain",
                "operationId": "ApiController.DeleteDomain",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the domain",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Domain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/delete-enforcer": {
            "post": {
                "tags": [
                    "Enforcer API"
                ],
                "description": "delete enforcer",
                "operationId": "ApiController.DeleteEnforcer",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The enforcer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Enforce"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/object"
                        }
                    }
                }
            }
        },
        "/api/delete-group": {
            "post": {
                "tags": [
                    "Group API"
                ],
                "description": "delete group",
                "operationId": "ApiController.DeleteGroup",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the group",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Group"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/delete-ldap": {
            "post": {
                "tags": [
                    "Account API"
                ],
                "description": "delete ldap",
                "operationId": "ApiController.DeleteLdap",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the ldap",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Ldap"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/delete-mfa/": {
            "post": {
                "tags": [
                    "MFA API"
                ],
                "description": ": Delete MFA",
                "operationId": "ApiController.DeleteMfa",
                "responses": {
                    "200": {
                        "description": "object",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    }
                }
            }
        },
        "/api/delete-model": {
            "post": {
                "tags": [
                    "Model API"
                ],
                "description": "delete model",
                "operationId": "ApiController.DeleteModel",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Model"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/delete-organization": {
            "post": {
                "tags": [
                    "Organization API"
                ],
                "description": "delete organization",
                "operationId": "ApiController.DeleteOrganization",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the organization",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Organization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/delete-permission": {
            "post": {
                "tags": [
                    "Permission API"
                ],
                "description": "delete permission",
                "operationId": "ApiController.DeletePermission",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the permission",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Permission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/delete-provider": {
            "post": {
                "tags": [
                    "Provider API"
                ],
                "description": "delete provider",
                "operationId": "ApiController.DeleteProvider",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the provider",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Provider"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/delete-role": {
            "post": {
                "tags": [
                    "Role API"
                ],
                "description": "delete role",
                "operationId": "ApiController.DeleteRole",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the role",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/delete-session": {
            "post": {
                "tags": [
                    "Session API"
                ],
                "description": "Delete session for one user in one application.",
                "operationId": "ApiController.DeleteSession",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id(organization/application/user) of session",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/delete-token": {
            "post": {
                "tags": [
                    "Token API"
                ],
                "description": "delete token",
                "operationId": "ApiController.DeleteToken",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Details of the token",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/delete-user": {
            "post": {
                "tags": [
                    "User API"
                ],
                "description": "delete user",
                "operationId": "ApiController.DeleteUser",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/delete-webhook": {
            "post": {
                "tags": [
                    "Webhook API"
                ],
                "description": "delete webhook",
                "operationId": "ApiController.DeleteWebhook",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the webhook",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Webhook"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/enforce": {
            "post": {
                "tags": [
                    "Enforce API"
                ],
                "description": "Call Casbin Enforce API",
                "operationId": "ApiController.Enforce",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Casbin request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.CasbinRequest"
                        }
                    },
                    {
                        "in": "query",
                        "name": "permissionId",
                        "description": "permission id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "modelId",
                        "description": "model id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "resourceId",
                        "description": "resource id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/get-account": {
            "get": {
                "tags": [
                    "Account API"
                ],
                "description": "get the details of the current account",
                "operationId": "ApiController.GetAccount",
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/get-adapter": {
            "get": {
                "tags": [
                    "Adapter API"
                ],
                "description": "get adapter",
                "operationId": "ApiController.GetAdapter",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the adapter",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.Adapter"
                        }
                    }
                }
            }
        },
        "/api/get-adapters": {
            "get": {
                "tags": [
                    "Adapter API"
                ],
                "description": "get adapters",
                "operationId": "ApiController.GetAdapters",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The owner of adapters",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.Adapter"
                            }
                        }
                    }
                }
            }
        },
        "/api/get-app-login": {
            "get": {
                "tags": [
                    "Login API"
                ],
                "description": "get application login",
                "operationId": "ApiController.GetApplicationLogin",
                "parameters": [
                    {
                        "in": "query",
                        "name": "clientId",
                        "description": "client id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "responseType",
                        "description": "response type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "redirectUri",
                        "description": "redirect uri",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "scope",
                        "description": "scope",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "description": "state",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "One of 'cas' or 'code'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/get-application": {
            "get": {
                "tags": [
                    "Application API"
                ],
                "description": "get the detail of an application",
                "operationId": "ApiController.GetApplication",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the application.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.Application"
                        }
                    }
                }
            }
        },
        "/api/get-applications": {
            "get": {
                "tags": [
                    "Application API"
                ],
                "description": "get all applications",
                "operationId": "ApiController.GetApplications",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The owner of applications.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.Application"
                            }
                        }
                    }
                }
            }
        },
        "/api/get-auth-url": {
            "get": {
                "tags": [
                    "Login API"
                ],
                "description": "get auth url",
                "operationId": "ApiController.GetAuthURL",
                "parameters": [
                    {
                        "in": "query",
                        "name": "providerID",
                        "description": "The id ( owner/name ) of the provider",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "applicationID",
                        "description": "The id ( owner/name ) of the application",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "method",
                        "description": "Query method",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/get-captcha": {
            "get": {
                "tags": [
                    "Login API"
                ],
                "operationId": "ApiController.GetCaptcha",
                "responses": {
                    "200": {
                        "description": "\"The Response object\"",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/get-captcha-status": {
            "get": {
                "tags": [
                    "Token API"
                ],
                "description": "Get Login Error Counts",
                "operationId": "ApiController.GetCaptchaStatus",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/get-cert": {
            "get": {
                "tags": [
                    "Cert API"
                ],
                "description": "get cert",
                "operationId": "ApiController.GetCert",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the cert",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/cert.Cert"
                        }
                    }
                }
            }
        },
        "/api/get-certs": {
            "get": {
                "tags": [
                    "Cert API"
                ],
                "description": "get certs",
                "operationId": "ApiController.GetCerts",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The owner of certs",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/cert.Cert"
                            }
                        }
                    }
                }
            }
        },
        "/api/get-dashboard": {
            "get": {
                "tags": [
                    "GetDashboard API"
                ],
                "description": "get information of dashboard",
                "operationId": "ApiController.GetDashboard",
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/get-default-application": {
            "get": {
                "tags": [
                    "Organization API"
                ],
                "description": "get default application",
                "operationId": "ApiController.GetDefaultApplication",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "organization id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/get-domain": {
            "get": {
                "tags": [
                    "Domain API"
                ],
                "description": "get domain",
                "operationId": "ApiController.GetDomain",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the domains",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.Domain"
                        }
                    }
                }
            }
        },
        "/api/get-domains": {
            "get": {
                "tags": [
                    "Domain API"
                ],
                "description": "get domains",
                "operationId": "ApiController.GetDomains",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The owner of domains",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.Domain"
                            }
                        }
                    }
                }
            }
        },
        "/api/get-email-and-phone": {
            "get": {
                "tags": [
                    "User API"
                ],
                "description": "get email and phone by username",
                "operationId": "ApiController.GetEmailAndPhone",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "username",
                        "description": "The username of the user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "organization",
                        "description": "The organization of the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/get-enforcer": {
            "get": {
                "tags": [
                    "Enforcer API"
                ],
                "description": "get enforcer",
                "operationId": "ApiController.GetEnforcer",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name )  of enforcer",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/object"
                        }
                    }
                }
            }
        },
        "/api/get-enforcers": {
            "get": {
                "tags": [
                    "Enforcer API"
                ],
                "description": "get enforcers",
                "operationId": "ApiController.GetEnforcers",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The owner of enforcers",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.Enforcer"
                            }
                        }
                    }
                }
            }
        },
        "/api/get-global-providers": {
            "get": {
                "tags": [
                    "Provider API"
                ],
                "description": "get Global providers",
                "operationId": "ApiController.GetGlobalProviders",
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.Provider"
                            }
                        }
                    }
                }
            }
        },
        "/api/get-global-users": {
            "get": {
                "tags": [
                    "User API"
                ],
                "description": "get global users",
                "operationId": "ApiController.GetGlobalUsers",
                "parameters": [
                    {
                        "in": "query",
                        "name": "fillUserIdProvider",
                        "description": "Should fill userIdProvider",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.User"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthoized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/get-globle-certs": {
            "get": {
                "tags": [
                    "Cert API"
                ],
                "description": "get globle certs",
                "operationId": "ApiController.GetGlobleCerts",
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/cert.Cert"
                            }
                        }
                    }
                }
            }
        },
        "/api/get-group": {
            "get": {
                "tags": [
                    "Group API"
                ],
                "description": "get group",
                "operationId": "ApiController.GetGroup",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the group",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.Group"
                        }
                    }
                }
            }
        },
        "/api/get-groups": {
            "get": {
                "tags": [
                    "Group API"
                ],
                "description": "get groups",
                "operationId": "ApiController.GetGroups",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The owner of groups",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.Group"
                            }
                        }
                    }
                }
            }
        },
        "/api/get-ldap": {
            "get": {
                "tags": [
                    "Account API"
                ],
                "description": "get ldap",
                "operationId": "ApiController.GetLdap",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.Ldap"
                        }
                    }
                }
            }
        },
        "/api/get-ldap-server-names": {
            "get": {
                "tags": [
                    "Account API"
                ],
                "description": "get ldaps",
                "operationId": "ApiController.GetLdapServerNames",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "owner",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LdapIdWithNameResp"
                            }
                        }
                    }
                }
            }
        },
        "/api/get-ldap-sync-history": {
            "get": {
                "tags": [
                    "Account API"
                ],
                "description": "get detailed ldap sync history info, with list of users and what happened to them",
                "operationId": "ApiController.GetLdapSyncHistory",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "Ldap UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Results per page",
                        "type": "string",
                        "default": "10"
                    },
                    {
                        "in": "query",
                        "name": "sortOrder",
                        "description": "descend/ascend",
                        "type": "string",
                        "default": "descend"
                    },
                    {
                        "in": "query",
                        "name": "p",
                        "description": "Page number",
                        "type": "string",
                        "default": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ldap_sync.LdapSyncHistory"
                            }
                        }
                    }
                }
            }
        },
        "/api/get-ldap-users": {
            "get": {
                "tags": [
                    "Account API"
                ],
                "description": "get ldap users",
                "operationId": "ApiController.GetLdapser",
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/LdapResp"
                        }
                    }
                }
            }
        },
        "/api/get-ldaps": {
            "get": {
                "tags": [
                    "Account API"
                ],
                "description": "get ldaps",
                "operationId": "ApiController.GetLdaps",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "owner",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.Ldap"
                            }
                        }
                    }
                }
            }
        },
        "/api/get-model": {
            "get": {
                "tags": [
                    "Model API"
                ],
                "description": "get model",
                "operationId": "ApiController.GetModel",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the model",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.Model"
                        }
                    }
                }
            }
        },
        "/api/get-models": {
            "get": {
                "tags": [
                    "Model API"
                ],
                "description": "get models",
                "operationId": "ApiController.GetModels",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The owner of models",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.Model"
                            }
                        }
                    }
                }
            }
        },
        "/api/get-organization": {
            "get": {
                "tags": [
                    "Organization API"
                ],
                "description": "get organization",
                "operationId": "ApiController.GetOrganization",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "organization id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.Organization"
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/get-organization-names": {
            "get": {
                "tags": [
                    "Organization API"
                ],
                "description": "get all organization name and displayName",
                "operationId": "ApiController.GetOrganizationNames",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "owner",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.Organization"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/get-organizations": {
            "get": {
                "tags": [
                    "Organization API"
                ],
                "description": "get organizations",
                "operationId": "ApiController.GetOrganizations",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "owner",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.Organization"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/get-permission": {
            "get": {
                "tags": [
                    "Permission API"
                ],
                "description": "get permission",
                "operationId": "ApiController.GetPermission",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the permission",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.Permission"
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/get-permissions": {
            "get": {
                "tags": [
                    "Permission API"
                ],
                "description": "get permissions",
                "operationId": "ApiController.GetPermissions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The owner of permissions",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.Permission"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/get-permissions-by-role": {
            "get": {
                "tags": [
                    "Permission API"
                ],
                "description": "get permissions by role",
                "operationId": "ApiController.GetPermissionsByRole",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.Permission"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/get-permissions-by-submitter": {
            "get": {
                "tags": [
                    "Permission API"
                ],
                "description": "get permissions by submitter",
                "operationId": "ApiController.GetPermissionsBySubmitter",
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.Permission"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/get-prometheus-info": {
            "get": {
                "tags": [
                    "Prometheus API"
                ],
                "description": "get Prometheus Info",
                "operationId": "ApiController.GetPrometheusInfo",
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.PrometheusInfo"
                        }
                    }
                }
            }
        },
        "/api/get-provider": {
            "get": {
                "tags": [
                    "Provider API"
                ],
                "description": "get provider",
                "operationId": "ApiController.GetProvider",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the provider",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.Provider"
                        }
                    }
                }
            }
        },
        "/api/get-provider-saml-metadata": {
            "get": {
                "tags": [
                    "Provider API"
                ],
                "description": "get provider SAML methadata",
                "operationId": "ApiController.GetProviderSamlMetadata",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the provider",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.Provider"
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/get-providers": {
            "get": {
                "tags": [
                    "Provider API"
                ],
                "description": "get providers",
                "operationId": "ApiController.GetProviders",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The owner of providers",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.Provider"
                            }
                        }
                    }
                }
            }
        },
        "/api/get-records": {
            "get": {
                "tags": [
                    "Record API"
                ],
                "description": "get all records",
                "operationId": "ApiController.GetRecords",
                "parameters": [
                    {
                        "in": "query",
                        "name": "pageSize",
                        "description": "The size of each page",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "p",
                        "description": "The number of the page",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.Record"
                        }
                    }
                }
            }
        },
        "/api/get-records-filter": {
            "post": {
                "tags": [
                    "Record API"
                ],
                "description": "get records by filter",
                "operationId": "ApiController.GetRecordsByFilter",
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.Record"
                        }
                    }
                }
            }
        },
        "/api/get-role": {
            "get": {
                "tags": [
                    "Role API"
                ],
                "description": "get role",
                "operationId": "ApiController.GetRole",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.Role"
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/get-roles": {
            "get": {
                "tags": [
                    "Role API"
                ],
                "description": "get roles",
                "operationId": "ApiController.GetRoles",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The owner of roles",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.Role"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/get-session": {
            "get": {
                "tags": [
                    "Session API"
                ],
                "description": "Get session for one user in one application.",
                "operationId": "ApiController.GetSingleSession",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id(organization/application/user) of session",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/get-sessions": {
            "get": {
                "tags": [
                    "Session API"
                ],
                "description": "Get organization user sessions.",
                "operationId": "ApiController.GetSessions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The organization name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/get-sorted-users": {
            "get": {
                "tags": [
                    "User API"
                ],
                "operationId": "ApiController.GetSortedUsers",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The owner of users",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sorter",
                        "description": "The DB column name to sort by, e.g., created_time",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The count of users to return, e.g., 25",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/get-system-info": {
            "get": {
                "tags": [
                    "System API"
                ],
                "description": "get system info like CPU and memory usage",
                "operationId": "ApiController.GetSystemInfo",
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/util.SystemInfo"
                        }
                    }
                }
            }
        },
        "/api/get-token": {
            "get": {
                "tags": [
                    "Token API"
                ],
                "description": "get token",
                "operationId": "ApiController.GetToken",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.Token"
                        }
                    }
                }
            }
        },
        "/api/get-tokens": {
            "get": {
                "tags": [
                    "Token API"
                ],
                "description": "get tokens",
                "operationId": "ApiController.GetTokens",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The owner of tokens",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "description": "The size of each page",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "p",
                        "description": "The number of the page",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.Token"
                            }
                        }
                    }
                }
            }
        },
        "/api/get-user": {
            "get": {
                "tags": [
                    "User API"
                ],
                "description": "get user",
                "operationId": "ApiController.GetUser",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The owner of the user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "email",
                        "description": "The email of the user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "phone",
                        "description": "The phone of the user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "userId",
                        "description": "The userId of the user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fillUserIdProvider",
                        "description": "Should fill userIdProvider",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/get-user-application": {
            "get": {
                "tags": [
                    "Application API"
                ],
                "description": "get the detail of the user's application",
                "operationId": "ApiController.GetUserApplication",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.Application"
                        }
                    }
                }
            }
        },
        "/api/get-user-by-api-token": {
            "get": {
                "tags": [
                    "Api Token API"
                ],
                "description": "get user by API token",
                "operationId": "ApiController.GetUserByApiToken",
                "parameters": [
                    {
                        "in": "query",
                        "name": "api_token",
                        "description": "The user api token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.User"
                        }
                    },
                    "403": {
                        "description": "Unauthorized operation"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/get-user-count": {
            "get": {
                "tags": [
                    "User API"
                ],
                "operationId": "ApiController.GetUserCount",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The owner of users",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "isOnline",
                        "description": "The filter for query, 1 for online, 0 for offline, empty string for all users",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} int The count of filtered users for an organization"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/get-user-tokens": {
            "get": {
                "tags": [
                    "Api Token API"
                ],
                "description": "get user tokens",
                "operationId": "ApiController.GetUserTokens",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The owner of token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.User"
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized operation"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/get-users": {
            "get": {
                "tags": [
                    "User API"
                ],
                "operationId": "ApiController.GetUsers",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The owner of users",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fillUserIdProvider",
                        "description": "Should fill userIdProvider",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/get-version-info": {
            "get": {
                "tags": [
                    "System API"
                ],
                "description": "get version info like Casdoor release version and commit ID",
                "operationId": "ApiController.GetVersionInfo",
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/util.VersionInfo"
                        }
                    }
                }
            }
        },
        "/api/get-webhook": {
            "get": {
                "tags": [
                    "Webhook API"
                ],
                "description": "get webhook",
                "operationId": "ApiController.GetWebhook",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the webhook",
                        "required": true,
                        "type": "string",
                        "default": "built-in/admin"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.Webhook"
                        }
                    }
                }
            }
        },
        "/api/get-webhook-event": {
            "get": {
                "tags": [
                    "GetWebhookEventType API"
                ],
                "operationId": "ApiController.GetWebhookEventType",
                "responses": {
                    "200": {
                        "description": "\"The Response object\"",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/get-webhooks": {
            "get": {
                "tags": [
                    "Webhook API"
                ],
                "description": "get webhooks",
                "operationId": "ApiController.GetWebhooks",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The owner of webhooks",
                        "required": true,
                        "type": "string",
                        "default": "built-in/admin"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object.Webhook"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "test_apiKey": []
                    }
                ]
            }
        },
        "/api/health": {
            "get": {
                "tags": [
                    "System API"
                ],
                "description": "check if the system is live",
                "operationId": "ApiController.Health",
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/is-session-duplicated": {
            "get": {
                "tags": [
                    "Session API"
                ],
                "description": "Check if there are other different sessions for one user in one application.",
                "operationId": "ApiController.IsSessionDuplicated",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id(organization/application/user) of session",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sessionId",
                        "description": "sessionId to be checked",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Login API"
                ],
                "description": "login",
                "operationId": "ApiController.Login",
                "parameters": [
                    {
                        "in": "query",
                        "name": "clientId",
                        "description": "clientId",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "responseType",
                        "description": "responseType",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "redirectUri",
                        "description": "redirectUri",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "scope",
                        "description": "scope",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "description": "state",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nonce",
                        "description": "nonce",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "code_challenge_method",
                        "description": "code_challenge_method",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "code_challenge",
                        "description": "code_challenge",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "form",
                        "description": "Login information",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.AuthForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/login/oauth/access_token": {
            "post": {
                "tags": [
                    "Token API"
                ],
                "description": "get OAuth access token",
                "operationId": "ApiController.GetOAuthToken",
                "parameters": [
                    {
                        "in": "query",
                        "name": "grant_type",
                        "description": "OAuth grant type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "client_id",
                        "description": "OAuth client id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "client_secret",
                        "description": "OAuth client secret",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "code",
                        "description": "OAuth code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.TokenWrapper"
                        }
                    },
                    "400": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.TokenError"
                        }
                    },
                    "401": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.TokenError"
                        }
                    }
                }
            }
        },
        "/api/login/oauth/introspect": {
            "post": {
                "description": "The introspection endpoint is an OAuth 2.0 endpoint that takes a",
                "operationId": "ApiController.IntrospectToken",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "token",
                        "description": "access_token's value or refresh_token's value",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "token_type_hint",
                        "description": "the token type access_token or refresh_token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.IntrospectionResponse"
                        }
                    },
                    "400": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.TokenError"
                        }
                    },
                    "401": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.TokenError"
                        }
                    }
                }
            }
        },
        "/api/login/oauth/refresh_token": {
            "post": {
                "tags": [
                    "Token API"
                ],
                "description": "refresh OAuth access token",
                "operationId": "ApiController.RefreshToken",
                "parameters": [
                    {
                        "in": "query",
                        "name": "grant_type",
                        "description": "OAuth grant type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "refresh_token",
                        "description": "OAuth refresh token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "scope",
                        "description": "OAuth scope",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "client_id",
                        "description": "OAuth client id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "client_secret",
                        "description": "OAuth client secret",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.TokenWrapper"
                        }
                    },
                    "400": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.TokenError"
                        }
                    },
                    "401": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.TokenError"
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "get": {
                "tags": [
                    "Login API"
                ],
                "description": "logout the current user",
                "operationId": "ApiController.Logout",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id_token_hint",
                        "description": "id_token_hint",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "post_logout_redirect_uri",
                        "description": "post_logout_redirect_uri",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "description": "state",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Login API"
                ],
                "description": "logout the current user",
                "operationId": "ApiController.Logout",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id_token_hint",
                        "description": "id_token_hint",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "post_logout_redirect_uri",
                        "description": "post_logout_redirect_uri",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "description": "state",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/mfa/setup/enable": {
            "post": {
                "tags": [
                    "MFA API"
                ],
                "description": "enable totp",
                "operationId": "ApiController.MfaSetupEnable",
                "responses": {
                    "200": {
                        "description": "object",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    }
                }
            }
        },
        "/api/mfa/setup/initiate": {
            "post": {
                "tags": [
                    "MFA API"
                ],
                "description": "setup MFA",
                "operationId": "ApiController.MfaSetupInitiate",
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/mfa/setup/verify": {
            "post": {
                "tags": [
                    "MFA API"
                ],
                "description": "setup verify totp",
                "operationId": "ApiController.MfaSetupVerify",
                "responses": {
                    "200": {
                        "description": "object",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    }
                }
            }
        },
        "/api/ready": {
            "get": {
                "tags": [
                    "System API"
                ],
                "description": "check if the system is ready",
                "operationId": "ApiController.Ready",
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/recreate-api-token": {
            "post": {
                "tags": [
                    "Api Token API"
                ],
                "description": "recreate api token",
                "operationId": "ApiController.RecreateApiToken",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "The owner of token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api_token",
                        "description": "The user api token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.UserApiToken"
                        }
                    },
                    "403": {
                        "description": "Unauthorized operation"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/remove-user-from-group": {
            "post": {
                "tags": [
                    "User API"
                ],
                "operationId": "ApiController.RemoveUserFromGroup",
                "responses": {
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/reset-email-or-phone": {
            "post": {
                "tags": [
                    "Account API"
                ],
                "operationId": "ApiController.ResetEmailOrPhone",
                "responses": {
                    "200": {
                        "description": "\"The Response object\"",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/send-email": {
            "post": {
                "tags": [
                    "Service API"
                ],
                "description": "This API is not for Casdoor frontend to call, it is for Casdoor SDKs.",
                "operationId": "ApiController.SendEmail",
                "parameters": [
                    {
                        "in": "query",
                        "name": "clientId",
                        "description": "The clientId of the application",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "clientSecret",
                        "description": "The clientSecret of the application",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "from",
                        "description": "Details of the email request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.EmailForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    }
                }
            }
        },
        "/api/send-invite": {
            "post": {
                "tags": [
                    "User API"
                ],
                "operationId": "ApiController.SendInvite",
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/send-notification": {
            "post": {
                "tags": [
                    "Service API"
                ],
                "description": "This API is not for Casdoor frontend to call, it is for Casdoor SDKs.",
                "operationId": "ApiController.SendNotification",
                "parameters": [
                    {
                        "in": "body",
                        "name": "from",
                        "description": "Details of the notification request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.NotificationForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    }
                }
            }
        },
        "/api/send-sms": {
            "post": {
                "tags": [
                    "Service API"
                ],
                "description": "This API is not for Casdoor frontend to call, it is for Casdoor SDKs.",
                "operationId": "ApiController.SendSms",
                "parameters": [
                    {
                        "in": "query",
                        "name": "clientId",
                        "description": "The clientId of the application",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "clientSecret",
                        "description": "The clientSecret of the application",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "from",
                        "description": "Details of the sms request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.SmsForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    }
                }
            }
        },
        "/api/send-verification-code": {
            "post": {
                "tags": [
                    "Verification API"
                ],
                "operationId": "ApiController.SendVerificationCode",
                "responses": {
                    "200": {
                        "description": "\"The Response object\"",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/set-password": {
            "post": {
                "tags": [
                    "Account API"
                ],
                "description": "set password",
                "operationId": "ApiController.SetPassword",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "userOwner",
                        "description": "The owner of the user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "userName",
                        "description": "The name of the user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "oldPassword",
                        "description": "The old password of the user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "newPassword",
                        "description": "The new password of the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/set-preferred-mfa": {
            "post": {
                "tags": [
                    "MFA API"
                ],
                "description": ": Set specific Mfa Preferred",
                "operationId": "ApiController.SetPreferredMfa",
                "responses": {
                    "200": {
                        "description": "object",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    }
                }
            }
        },
        "/api/signup": {
            "post": {
                "tags": [
                    "Login API"
                ],
                "description": "sign up a new user",
                "operationId": "ApiController.Signup",
                "parameters": [
                    {
                        "in": "body",
                        "name": "type",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "signinMethod",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "organization",
                        "description": "true",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "id",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "username",
                        "description": "true",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "password",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "name",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "firstName",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "lastName",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "email",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "phone",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "affiliation",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "idCard",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "region",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "invitationCode",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "application",
                        "description": "true",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "clientId",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "provider",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "code",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "state",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "redirectUri",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "method",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "emailCode",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "phoneCode",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "countryCode",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "autoSignin",
                        "description": "false",
                        "schema": {
                            "type": "boolean"
                        },
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "relayState",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "samlRequest",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "samlResponse",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "captchaType",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "captchaToken",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "clientSecret",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "mfaType",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "passcode",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "recoveryCode",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "plan",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "pricing",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "ldapId",
                        "description": "false",
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/sync-ldap-users": {
            "post": {
                "tags": [
                    "Account API"
                ],
                "description": "sync ldap users",
                "operationId": "ApiController.SyncLdapUsers",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.LdapSyncResp"
                        }
                    }
                }
            }
        },
        "/api/test-ldap": {
            "post": {
                "tags": [
                    "Account API"
                ],
                "description": "test ldap connection",
                "operationId": "ApiController.TestLdapConnection",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the ldap",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ldap_sync.Ldap"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/test-provider": {
            "post": {
                "tags": [
                    "Provider API"
                ],
                "description": "test provider connection",
                "operationId": "ApiController.TestProviderConnection",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the provider",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Provider"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/unlink": {
            "post": {
                "tags": [
                    "Login API"
                ],
                "responses": {
                    "200": {
                        "description": "\"The Response object\"",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/update-adapter": {
            "post": {
                "tags": [
                    "Adapter API"
                ],
                "description": "update adapter",
                "operationId": "ApiController.UpdateAdapter",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the adapter",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the adapter",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Adapter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/update-application": {
            "post": {
                "tags": [
                    "Application API"
                ],
                "description": "update an application",
                "operationId": "ApiController.UpdateApplication",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the application",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the application",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Application"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/update-cert": {
            "post": {
                "tags": [
                    "Cert API"
                ],
                "description": "update cert",
                "operationId": "ApiController.UpdateCert",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the cert",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the cert",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cert.Cert"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/update-domain": {
            "post": {
                "tags": [
                    "Domain API"
                ],
                "description": "update domain",
                "operationId": "ApiController.UpdateDomain",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the domain",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Domain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/update-enforcer": {
            "post": {
                "tags": [
                    "Enforcer API"
                ],
                "description": "update enforcer",
                "operationId": "ApiController.UpdateEnforcer",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name )  of enforcer",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "enforcer",
                        "description": "The enforcer object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/object"
                        }
                    }
                }
            }
        },
        "/api/update-group": {
            "post": {
                "tags": [
                    "Group API"
                ],
                "description": "update group",
                "operationId": "ApiController.UpdateGroup",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the group",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Group"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/update-ldap": {
            "post": {
                "tags": [
                    "Account API"
                ],
                "description": "update ldap",
                "operationId": "ApiController.UpdateLdap",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the ldap",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Ldap"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/update-model": {
            "post": {
                "tags": [
                    "Model API"
                ],
                "description": "update model",
                "operationId": "ApiController.UpdateModel",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the model",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Model"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/update-organization": {
            "post": {
                "tags": [
                    "Organization API"
                ],
                "description": "update organization",
                "operationId": "ApiController.UpdateOrganization",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the organization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the organization",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Organization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/update-permission": {
            "post": {
                "tags": [
                    "Permission API"
                ],
                "description": "update permission",
                "operationId": "ApiController.UpdatePermission",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the permission",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the permission",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Permission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/update-provider": {
            "post": {
                "tags": [
                    "Provider API"
                ],
                "description": "update provider",
                "operationId": "ApiController.UpdateProvider",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the provider",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the provider",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Provider"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/update-role": {
            "post": {
                "tags": [
                    "Role API"
                ],
                "description": "update role",
                "operationId": "ApiController.UpdateRole",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the role",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the role",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/update-session": {
            "post": {
                "tags": [
                    "Session API"
                ],
                "description": "Update session for one user in one application.",
                "operationId": "ApiController.UpdateSession",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id(organization/application/user) of session",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/update-token": {
            "post": {
                "tags": [
                    "Token API"
                ],
                "description": "update token",
                "operationId": "ApiController.UpdateToken",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Details of the token",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/update-user": {
            "post": {
                "tags": [
                    "User API"
                ],
                "description": "update user",
                "operationId": "ApiController.UpdateUser",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/update-webhook": {
            "post": {
                "tags": [
                    "Webhook API"
                ],
                "description": "update webhook",
                "operationId": "ApiController.UpdateWebhook",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id ( owner/name ) of the webhook",
                        "required": true,
                        "type": "string",
                        "default": "built-in/admin"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The details of the webhook",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Webhook"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Account API"
                ],
                "description": "return Laravel compatible user information according to OAuth 2.0",
                "operationId": "ApiController.UserInfo2",
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/LaravelResponse"
                        }
                    }
                }
            }
        },
        "/api/userinfo": {
            "get": {
                "tags": [
                    "Account API"
                ],
                "description": "return user information according to OIDC standards",
                "operationId": "ApiController.UserInfo",
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/object.Userinfo"
                        }
                    }
                }
            }
        },
        "/api/v2/sync-ldap-users": {
            "post": {
                "tags": [
                    "Account API"
                ],
                "description": "sync ldap users by ldap uuid",
                "operationId": "ApiController.SyncLdapUsersV2",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "true",
                        "schema": {
                            "$ref": "#/definitions/controllers.SyncLdapUsersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Response object",
                        "schema": {
                            "$ref": "#/definitions/controllers.LdapSyncResp"
                        }
                    }
                }
            }
        },
        "/api/verify-captcha": {
            "post": {
                "tags": [
                    "Verification API"
                ],
                "operationId": "ApiController.VerifyCaptcha",
                "responses": {
                    "200": {
                        "description": "\"The Response object\"",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/verify-code": {
            "post": {
                "tags": [
                    "Verification API"
                ],
                "operationId": "ApiController.VerifyCode",
                "responses": {
                    "200": {
                        "description": "\"The Response object\"",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/webauthn/signin/begin": {
            "get": {
                "tags": [
                    "Login API"
                ],
                "description": "WebAuthn Login Flow 1st stage",
                "operationId": "ApiController.WebAuthnSigninBegin",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "description": "owner",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The CredentialAssertion object",
                        "schema": {
                            "$ref": "#/definitions/protocol.CredentialAssertion"
                        }
                    }
                }
            }
        },
        "/api/webauthn/signin/finish": {
            "post": {
                "tags": [
                    "Login API"
                ],
                "description": "WebAuthn Login Flow 2nd stage",
                "operationId": "ApiController.WebAuthnSigninBegin",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "authenticator assertion Response",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/protocol.CredentialAssertionResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"The Response object\"",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/webauthn/signup/begin": {
            "get": {
                "tags": [
                    "User API"
                ],
                "description": "WebAuthn Registration Flow 1st stage",
                "operationId": "ApiController.WebAuthnSignupBegin",
                "responses": {
                    "200": {
                        "description": "The CredentialCreationOptions object",
                        "schema": {
                            "$ref": "#/definitions/protocol.CredentialCreation"
                        }
                    }
                }
            }
        },
        "/api/webauthn/signup/finish": {
            "post": {
                "tags": [
                    "User API"
                ],
                "description": "WebAuthn Registration Flow 2nd stage",
                "operationId": "ApiController.WebAuthnSignupFinish",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "authenticator attestation Response",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/protocol.CredentialCreationResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"The Response object\"",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        },
        "/api/webhook": {
            "post": {
                "tags": [
                    "HandleOfficialAccountEvent API"
                ],
                "operationId": "ApiController.HandleOfficialAccountEvent",
                "responses": {
                    "200": {
                        "description": "\"The Response object\"",
                        "schema": {
                            "$ref": "#/definitions/controllers.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "220981.\u003cnil\u003e.string": {
            "title": "string",
            "type": "object"
        },
        "307374.\u003cnil\u003e.string": {
            "title": "string",
            "type": "object"
        },
        "LaravelResponse": {
            "title": "LaravelResponse",
            "type": "object"
        },
        "LdapIdWithNameResp": {
            "title": "LdapIdWithNameResp",
            "type": "object"
        },
        "LdapResp": {
            "title": "LdapResp",
            "type": "object"
        },
        "Response": {
            "title": "Response",
            "type": "object"
        },
        "casbin.Enforcer": {
            "title": "Enforcer",
            "type": "object"
        },
        "cert.Cert": {
            "title": "Cert",
            "type": "object",
            "properties": {
                "bitSize": {
                    "type": "integer",
                    "format": "int64"
                },
                "certificate": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string"
                },
                "cryptoAlgorithm": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "expireInYears": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "controllers.AuthForm": {
            "title": "AuthForm",
            "type": "object"
        },
        "controllers.EmailForm": {
            "title": "EmailForm",
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "receivers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sender": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "controllers.LdapSyncResp": {
            "title": "LdapSyncResp",
            "type": "object",
            "properties": {
                "exist": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ldap_sync.LdapUser"
                    }
                },
                "failed": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ldap_sync.LdapUser"
                    }
                }
            }
        },
        "controllers.NotificationForm": {
            "title": "NotificationForm",
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "controllers.Response": {
            "title": "Response",
            "type": "object",
            "properties": {
                "data": {
                    "additionalProperties": {
                        "description": "support string, struct or []struct",
                        "type": "string"
                    }
                },
                "data2": {
                    "additionalProperties": {
                        "description": "support string, struct or []struct",
                        "type": "string"
                    }
                },
                "msg": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "sub": {
                    "type": "string"
                }
            }
        },
        "controllers.SmsForm": {
            "title": "SmsForm",
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "organizationId": {
                    "type": "string"
                },
                "receivers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "controllers.SyncLdapUsersRequest": {
            "title": "SyncLdapUsersRequest",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "jose.JSONWebKey": {
            "title": "JSONWebKey",
            "type": "object"
        },
        "ldap_sync.AttributeMappingItem": {
            "title": "AttributeMappingItem",
            "type": "object",
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "userField": {
                    "type": "string"
                }
            }
        },
        "ldap_sync.Ldap": {
            "title": "Ldap",
            "type": "object",
            "properties": {
                "attributeMappingItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ldap_sync.AttributeMappingItem"
                    }
                },
                "autoSync": {
                    "type": "integer",
                    "format": "int64"
                },
                "baseDn": {
                    "type": "string"
                },
                "cert": {
                    "type": "string"
                },
                "clientCert": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string"
                },
                "enableAttributeMapping": {
                    "type": "boolean"
                },
                "enableCaseInsensitivity": {
                    "type": "boolean"
                },
                "enableCryptographicAuth": {
                    "type": "boolean"
                },
                "enableRoleMapping": {
                    "type": "boolean"
                },
                "enableSsl": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string"
                },
                "filterFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastSync": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "roleMappingItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ldap_sync.RoleMappingItem"
                    }
                },
                "serverName": {
                    "type": "string"
                },
                "userMappingStrategy": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "ldap_sync.LdapSyncHistory": {
            "title": "LdapSyncHistory",
            "type": "object",
            "properties": {
                "ended_at": {
                    "type": "string",
                    "format": "datetime"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ldap_id": {
                    "type": "string"
                },
                "ldap_sync_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "reason": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ldap_sync.LdapSyncHistoryUser"
                    }
                },
                "started_at": {
                    "type": "string",
                    "format": "datetime"
                },
                "synced_by_user_id": {
                    "type": "string"
                }
            }
        },
        "ldap_sync.LdapSyncHistoryUser": {
            "title": "LdapSyncHistoryUser",
            "type": "object",
            "properties": {
                "Action": {
                    "type": "string"
                },
                "UUID": {
                    "type": "string"
                }
            }
        },
        "ldap_sync.LdapUser": {
            "title": "LdapUser",
            "type": "object",
            "properties": {
                "EmailAddress": {
                    "type": "string"
                },
                "Mail": {
                    "type": "string"
                },
                "MobileTelephoneNumber": {
                    "type": "string"
                },
                "PostalAddress": {
                    "type": "string"
                },
                "RegisteredAddress": {
                    "type": "string"
                },
                "TelephoneNumber": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "cn": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gidNumber": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "memberOf": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "uid": {
                    "type": "string"
                },
                "uidNumber": {
                    "type": "string"
                },
                "userPrincipalName": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "ldap_sync.RoleMappingItem": {
            "title": "RoleMappingItem",
            "type": "object",
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.Model": {
            "title": "Model",
            "type": "object"
        },
        "object": {
            "title": "object",
            "type": "object"
        },
        "object.AccountItem": {
            "title": "AccountItem",
            "type": "object",
            "properties": {
                "modifyRule": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "viewRule": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "object.Adapter": {
            "title": "Adapter",
            "type": "object",
            "properties": {
                "createdTime": {
                    "type": "string"
                },
                "database": {
                    "type": "string"
                },
                "databaseType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "table": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "useSameDb": {
                    "type": "boolean"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "object.Application": {
            "title": "Application",
            "type": "object",
            "properties": {
                "affiliationUrl": {
                    "type": "string"
                },
                "cert": {
                    "type": "string"
                },
                "certPublicKey": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "enableAutoSignin": {
                    "type": "boolean"
                },
                "enableCodeSignin": {
                    "type": "boolean"
                },
                "enableIdpSignUp": {
                    "type": "boolean"
                },
                "enableInternalSignUp": {
                    "type": "boolean"
                },
                "enableLinkWithEmail": {
                    "type": "boolean"
                },
                "enablePassword": {
                    "type": "boolean"
                },
                "enablePasswordRecovery": {
                    "type": "boolean"
                },
                "enableSamlCompress": {
                    "type": "boolean"
                },
                "enableSigninSession": {
                    "type": "boolean"
                },
                "enableWebAuthn": {
                    "type": "boolean"
                },
                "expireInHours": {
                    "type": "integer",
                    "format": "int64"
                },
                "failedSigninFrozenTime": {
                    "type": "integer",
                    "format": "int64"
                },
                "failedSigninLimit": {
                    "type": "integer",
                    "format": "int64"
                },
                "footerText": {
                    "type": "string"
                },
                "forgetUrl": {
                    "type": "string"
                },
                "formBackgroundUrl": {
                    "type": "string"
                },
                "formCss": {
                    "type": "string"
                },
                "formCssMobile": {
                    "type": "string"
                },
                "formOffset": {
                    "type": "integer",
                    "format": "int64"
                },
                "formSideHtml": {
                    "type": "string"
                },
                "grantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "homepageUrl": {
                    "type": "string"
                },
                "invitationCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isPublic": {
                    "type": "boolean"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "orgChoiceMode": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "organizationObj": {
                    "$ref": "#/definitions/object.Organization"
                },
                "owner": {
                    "type": "string"
                },
                "providers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.ProviderItem"
                    }
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "refreshExpireInHours": {
                    "type": "integer",
                    "format": "int64"
                },
                "samlAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.SamlItem"
                    }
                },
                "samlReplyUrl": {
                    "type": "string"
                },
                "signinHtml": {
                    "type": "string"
                },
                "signinMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.SigninMethod"
                    }
                },
                "signinUrl": {
                    "type": "string"
                },
                "signupHtml": {
                    "type": "string"
                },
                "signupItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.SignupItem"
                    }
                },
                "signupUrl": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "termsOfUse": {
                    "type": "string"
                },
                "themeData": {
                    "$ref": "#/definitions/object.ThemeData"
                },
                "tokenFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tokenFormat": {
                    "type": "string"
                },
                "userMappingStrategy": {
                    "type": "string"
                }
            }
        },
        "object.CasbinRequest": {
            "title": "CasbinRequest",
            "type": "array",
            "items": {
                "$ref": "#/definitions/object.CasbinRequest"
            }
        },
        "object.Domain": {
            "title": "Domain",
            "type": "object",
            "properties": {
                "createdTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "object.Enforce": {
            "title": "Enforce",
            "type": "object"
        },
        "object.Enforcer": {
            "title": "Enforcer",
            "type": "object",
            "properties": {
                "adapter": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "modelCfg": {
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "updatedTime": {
                    "type": "string"
                }
            }
        },
        "object.GaugeVecInfo": {
            "title": "GaugeVecInfo",
            "type": "object",
            "properties": {
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "throughput": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "object.Group": {
            "title": "Group",
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.Group"
                    }
                },
                "contactEmail": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "isTopGroup": {
                    "type": "boolean"
                },
                "key": {
                    "type": "string"
                },
                "manager": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "parentId": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedTime": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.User"
                    }
                }
            }
        },
        "object.Header": {
            "title": "Header",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "object.HistogramVecInfo": {
            "title": "HistogramVecInfo",
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int64"
                },
                "latency": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "object.IntrospectionResponse": {
            "title": "IntrospectionResponse",
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "aud": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "client_id": {
                    "type": "string"
                },
                "exp": {
                    "type": "integer",
                    "format": "int64"
                },
                "iat": {
                    "type": "integer",
                    "format": "int64"
                },
                "iss": {
                    "type": "string"
                },
                "jti": {
                    "type": "string"
                },
                "nbf": {
                    "type": "integer",
                    "format": "int64"
                },
                "scope": {
                    "type": "string"
                },
                "sub": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "object.Ldap": {
            "title": "Ldap",
            "type": "object"
        },
        "object.ManagedAccount": {
            "title": "ManagedAccount",
            "type": "object",
            "properties": {
                "application": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "signinUrl": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "object.MfaItem": {
            "title": "MfaItem",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "rule": {
                    "type": "string"
                }
            }
        },
        "object.MfaProps": {
            "title": "MfaProps",
            "type": "object",
            "properties": {
                "countryCode": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "isPreferred": {
                    "type": "boolean"
                },
                "mfaType": {
                    "type": "string"
                },
                "recoveryCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "secret": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "object.Model": {
            "title": "Model",
            "type": "object",
            "properties": {
                "createdTime": {
                    "type": "string"
                },
                "customPolicyMapping": {
                    "type": "boolean"
                },
                "customPolicyMappingRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/220981.\u003cnil\u003e.string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "modelText": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                }
            }
        },
        "object.OidcDiscovery": {
            "title": "OidcDiscovery",
            "type": "object",
            "properties": {
                "authorization_endpoint": {
                    "type": "string"
                },
                "claims_supported": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "end_session_endpoint": {
                    "type": "string"
                },
                "grant_types_supported": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id_token_signing_alg_values_supported": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "introspection_endpoint": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "jwks_uri": {
                    "type": "string"
                },
                "request_object_signing_alg_values_supported": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "request_parameter_supported": {
                    "type": "boolean"
                },
                "response_modes_supported": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "response_types_supported": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scopes_supported": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subject_types_supported": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "token_endpoint": {
                    "type": "string"
                },
                "userinfo_endpoint": {
                    "type": "string"
                }
            }
        },
        "object.Organization": {
            "title": "Organization",
            "type": "object",
            "properties": {
                "accountItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.AccountItem"
                    }
                },
                "countryCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdTime": {
                    "type": "string"
                },
                "defaultApplication": {
                    "type": "string"
                },
                "defaultAvatar": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "enableSoftDeletion": {
                    "type": "boolean"
                },
                "favicon": {
                    "type": "string"
                },
                "initScore": {
                    "type": "integer",
                    "format": "int64"
                },
                "isProfilePublic": {
                    "type": "boolean"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "masterPassword": {
                    "type": "string"
                },
                "mfaItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.MfaItem"
                    }
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "passwordChangeInterval": {
                    "type": "integer",
                    "format": "int64"
                },
                "passwordMaxLength": {
                    "type": "integer",
                    "format": "int64"
                },
                "passwordMinLength": {
                    "type": "integer",
                    "format": "int64"
                },
                "passwordOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "passwordSalt": {
                    "type": "string"
                },
                "passwordSpecialChars": {
                    "type": "string"
                },
                "passwordType": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "themeData": {
                    "$ref": "#/definitions/object.ThemeData"
                },
                "websiteUrl": {
                    "type": "string"
                }
            }
        },
        "object.Permission": {
            "title": "Permission",
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "adapter": {
                    "type": "string"
                },
                "approveTime": {
                    "type": "string"
                },
                "approver": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "effect": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "model": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "state": {
                    "type": "string"
                },
                "submitter": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "object.PrometheusInfo": {
            "title": "PrometheusInfo",
            "type": "object",
            "properties": {
                "apiLatency": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.HistogramVecInfo"
                    }
                },
                "apiThroughput": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.GaugeVecInfo"
                    }
                },
                "totalThroughput": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "object.Provider": {
            "title": "Provider",
            "type": "object",
            "properties": {
                "appId": {
                    "type": "string"
                },
                "baseHostUrl": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "cert": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientId2": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientSecret2": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string"
                },
                "customAuthUrl": {
                    "type": "string"
                },
                "customConfUrl": {
                    "type": "string"
                },
                "customLogo": {
                    "type": "string"
                },
                "customTokenUrl": {
                    "type": "string"
                },
                "customUserInfoUrl": {
                    "type": "string"
                },
                "disableSsl": {
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "enableRoleMapping": {
                    "type": "boolean"
                },
                "endpoint": {
                    "type": "string"
                },
                "endpointType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "idP": {
                    "type": "string"
                },
                "intranetEndpoint": {
                    "type": "string"
                },
                "inviteContent": {
                    "type": "string"
                },
                "inviteTitle": {
                    "type": "string"
                },
                "issuerUrl": {
                    "type": "string"
                },
                "metadata": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nameIdFormat": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "pathPrefix": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int64"
                },
                "providerUrl": {
                    "type": "string"
                },
                "receiver": {
                    "type": "string"
                },
                "regionId": {
                    "type": "string"
                },
                "removeFromApps": {
                    "type": "boolean"
                },
                "requestSignature": {
                    "type": "string"
                },
                "roleMappingItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ldap_sync.RoleMappingItem"
                    }
                },
                "scopes": {
                    "type": "string"
                },
                "signName": {
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "type": "string"
                },
                "singleLogoutServiceUrl": {
                    "type": "string"
                },
                "subType": {
                    "type": "string"
                },
                "templateCode": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userMapping": {
                    "$ref": "#/definitions/307374.\u003cnil\u003e.string"
                },
                "validateIdPSignature": {
                    "type": "boolean"
                }
            }
        },
        "object.ProviderItem": {
            "title": "ProviderItem",
            "type": "object",
            "properties": {
                "alertType": {
                    "type": "string"
                },
                "canSignIn": {
                    "type": "boolean"
                },
                "canSignUp": {
                    "type": "boolean"
                },
                "canUnlink": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "prompted": {
                    "type": "boolean"
                },
                "provider": {
                    "$ref": "#/definitions/object.Provider"
                },
                "rule": {
                    "type": "string"
                }
            }
        },
        "object.Record": {
            "title": "Record",
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "clientIp": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string"
                },
                "detail": {
                    "$ref": "#/definitions/object.RecordDetail"
                },
                "extendedUser": {
                    "$ref": "#/definitions/object.User"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "isTriggered": {
                    "type": "boolean"
                },
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "requestUri": {
                    "type": "string"
                },
                "response": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "object.RecordDetail": {
            "title": "RecordDetail",
            "type": "object",
            "properties": {
                "oldObject": {
                    "additionalProperties": {
                        "description": "support string, struct or []struct",
                        "type": "string"
                    }
                },
                "reasons": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "object.Role": {
            "title": "Role",
            "type": "object",
            "properties": {
                "createdTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "manualOverride": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "object.SamlItem": {
            "title": "SamlItem",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "nameFormat": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "object.SigninMethod": {
            "title": "SigninMethod",
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rule": {
                    "type": "string"
                }
            }
        },
        "object.SignupItem": {
            "title": "SignupItem",
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "placeholder": {
                    "type": "string"
                },
                "prompted": {
                    "type": "boolean"
                },
                "regex": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "rule": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "object.ThemeData": {
            "title": "ThemeData",
            "type": "object",
            "properties": {
                "borderRadius": {
                    "type": "integer",
                    "format": "int64"
                },
                "colorPrimary": {
                    "type": "string"
                },
                "isCompact": {
                    "type": "boolean"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "themeType": {
                    "type": "string"
                }
            }
        },
        "object.Token": {
            "title": "Token",
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "application": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "codeChallenge": {
                    "type": "string"
                },
                "codeExpireIn": {
                    "type": "integer",
                    "format": "int64"
                },
                "codeIsUsed": {
                    "type": "boolean"
                },
                "createdTime": {
                    "type": "string"
                },
                "expiresIn": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "tokenType": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "object.TokenError": {
            "title": "TokenError",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "object.TokenWrapper": {
            "title": "TokenWrapper",
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer",
                    "format": "int64"
                },
                "id_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "object.User": {
            "title": "User",
            "type": "object",
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "accessSecret": {
                    "type": "string"
                },
                "address": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "adfs": {
                    "type": "string"
                },
                "affiliation": {
                    "type": "string"
                },
                "alipay": {
                    "type": "string"
                },
                "aliyunidaas": {
                    "type": "string"
                },
                "amazon": {
                    "type": "string"
                },
                "apple": {
                    "type": "string"
                },
                "auth0": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "avatarType": {
                    "type": "string"
                },
                "azuread": {
                    "type": "string"
                },
                "baidu": {
                    "type": "string"
                },
                "battlenet": {
                    "type": "string"
                },
                "bilibili": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string"
                },
                "bitbucket": {
                    "type": "string"
                },
                "box": {
                    "type": "string"
                },
                "casdoor": {
                    "type": "string"
                },
                "cloudfoundry": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "createdIp": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string"
                },
                "custom": {
                    "type": "string"
                },
                "dailymotion": {
                    "type": "string"
                },
                "deezer": {
                    "type": "string"
                },
                "digitalocean": {
                    "type": "string"
                },
                "dingtalk": {
                    "type": "string"
                },
                "discord": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "douyin": {
                    "type": "string"
                },
                "dropbox": {
                    "type": "string"
                },
                "education": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "emailVerified": {
                    "type": "boolean"
                },
                "eveonline": {
                    "type": "string"
                },
                "facebook": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "fitbit": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "genericsaml": {
                    "type": "string"
                },
                "gitea": {
                    "type": "string"
                },
                "gitee": {
                    "type": "string"
                },
                "github": {
                    "type": "string"
                },
                "gitlab": {
                    "type": "string"
                },
                "google": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hash": {
                    "type": "string"
                },
                "heroku": {
                    "type": "string"
                },
                "homepage": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "idCard": {
                    "type": "string"
                },
                "idCardType": {
                    "type": "string"
                },
                "influxcloud": {
                    "type": "string"
                },
                "infoflow": {
                    "type": "string"
                },
                "instagram": {
                    "type": "string"
                },
                "intercom": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "isDefaultAvatar": {
                    "type": "boolean"
                },
                "isDeleted": {
                    "type": "boolean"
                },
                "isForbidden": {
                    "type": "boolean"
                },
                "isOnline": {
                    "type": "boolean"
                },
                "kakao": {
                    "type": "string"
                },
                "karma": {
                    "type": "integer",
                    "format": "int64"
                },
                "keycloak": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "lark": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "lastSigninIp": {
                    "type": "string"
                },
                "lastSigninTime": {
                    "type": "string"
                },
                "lastSigninWrongTime": {
                    "type": "string"
                },
                "lastfm": {
                    "type": "string"
                },
                "ldap": {
                    "type": "string"
                },
                "line": {
                    "type": "string"
                },
                "linkedin": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "mailru": {
                    "type": "string"
                },
                "managedAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.ManagedAccount"
                    }
                },
                "mappingStrategy": {
                    "type": "string"
                },
                "meetup": {
                    "type": "string"
                },
                "metamask": {
                    "type": "string"
                },
                "mfaEmailEnabled": {
                    "type": "boolean"
                },
                "mfaPhoneEnabled": {
                    "type": "boolean"
                },
                "microsoftonline": {
                    "type": "string"
                },
                "multiFactorAuths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.MfaProps"
                    }
                },
                "name": {
                    "type": "string"
                },
                "naver": {
                    "type": "string"
                },
                "nextcloud": {
                    "type": "string"
                },
                "okta": {
                    "type": "string"
                },
                "onedrive": {
                    "type": "string"
                },
                "openid": {
                    "type": "string"
                },
                "oura": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordChangeRequired": {
                    "type": "boolean"
                },
                "passwordSalt": {
                    "type": "string"
                },
                "passwordType": {
                    "type": "string"
                },
                "patreon": {
                    "type": "string"
                },
                "paypal": {
                    "type": "string"
                },
                "permanentAvatar": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.Permission"
                    }
                },
                "phone": {
                    "type": "string"
                },
                "preHash": {
                    "type": "string"
                },
                "preferredMfaType": {
                    "type": "string"
                },
                "properties": {
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "qq": {
                    "type": "string"
                },
                "ranking": {
                    "type": "integer",
                    "format": "int64"
                },
                "recoveryCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.Role"
                    }
                },
                "salesforce": {
                    "type": "string"
                },
                "score": {
                    "type": "integer",
                    "format": "int64"
                },
                "shopify": {
                    "type": "string"
                },
                "signinWrongTimes": {
                    "type": "integer",
                    "format": "int64"
                },
                "signupApplication": {
                    "type": "string"
                },
                "slack": {
                    "type": "string"
                },
                "soundcloud": {
                    "type": "string"
                },
                "spotify": {
                    "type": "string"
                },
                "steam": {
                    "type": "string"
                },
                "strava": {
                    "type": "string"
                },
                "stripe": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "tiktok": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "totpSecret": {
                    "type": "string"
                },
                "tumblr": {
                    "type": "string"
                },
                "twitch": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "typetalk": {
                    "type": "string"
                },
                "uber": {
                    "type": "string"
                },
                "updatedTime": {
                    "type": "string"
                },
                "userIdProvider": {
                    "$ref": "#/definitions/object.UserIdProvider"
                },
                "vk": {
                    "type": "string"
                },
                "web3onboard": {
                    "type": "string"
                },
                "webauthnCredentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/webauthn.Credential"
                    }
                },
                "wechat": {
                    "type": "string"
                },
                "wecom": {
                    "type": "string"
                },
                "weibo": {
                    "type": "string"
                },
                "wepay": {
                    "type": "string"
                },
                "xero": {
                    "type": "string"
                },
                "yahoo": {
                    "type": "string"
                },
                "yammer": {
                    "type": "string"
                },
                "yandex": {
                    "type": "string"
                },
                "zoom": {
                    "type": "string"
                }
            }
        },
        "object.UserApiToken": {
            "title": "UserApiToken",
            "type": "object",
            "properties": {
                "api_token": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                }
            }
        },
        "object.UserIdProvider": {
            "title": "UserIdProvider",
            "type": "object",
            "properties": {
                "createdTime": {
                    "type": "string"
                },
                "lastSignInTime": {
                    "type": "string"
                },
                "ldapId": {
                    "type": "string"
                },
                "ldapServerName": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "providerDisplayName": {
                    "type": "string"
                },
                "providerName": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "usernameFromIdp": {
                    "type": "string"
                }
            }
        },
        "object.Userinfo": {
            "title": "Userinfo",
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "aud": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "email_verified": {
                    "type": "boolean"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "iss": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "preferred_username": {
                    "type": "string"
                },
                "sub": {
                    "type": "string"
                }
            }
        },
        "object.Webhook": {
            "title": "Webhook",
            "type": "object",
            "properties": {
                "contentType": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.Header"
                    }
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "isUserExtended": {
                    "type": "boolean"
                },
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "protocol.CredentialAssertion": {
            "title": "CredentialAssertion",
            "type": "object"
        },
        "protocol.CredentialAssertionResponse": {
            "title": "CredentialAssertionResponse",
            "type": "object"
        },
        "protocol.CredentialCreation": {
            "title": "CredentialCreation",
            "type": "object"
        },
        "protocol.CredentialCreationResponse": {
            "title": "CredentialCreationResponse",
            "type": "object"
        },
        "util.SystemInfo": {
            "title": "SystemInfo",
            "type": "object",
            "properties": {
                "cpuUsage": {
                    "type": "array",
                    "items": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "memoryTotal": {
                    "type": "integer",
                    "format": "int64"
                },
                "memoryUsed": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "util.VersionInfo": {
            "title": "VersionInfo",
            "type": "object",
            "properties": {
                "buildTime": {
                    "type": "string"
                },
                "commitId": {
                    "type": "string"
                },
                "commitOffset": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "webauthn.Credential": {
            "title": "Credential",
            "type": "object"
        },
        "xormadapter.Adapter": {
            "title": "Adapter",
            "type": "object"
        }
    },
    "securityDefinitions": {
        "AccessToken": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}